{"ast":null,"code":"// src/js/actions/index.js\nimport { SELECT_PHOTO, FETCH_PHOTO_PENDING, FETCH_PHOTO_SUCCESS, FETCH_PHOTO_FAILURE, FETCH_FAVPHOTO_PENDING, FETCH_FAVPHOTO_SUCCESS, FETCH_FAVPHOTO_FAILURE } from \"../constants/action-types\";\nimport flickrService from \"../services/flickr-service.js\";\nimport utilService from \"../services/util-service.js\";\nexport const selectPhoto = payload => ({\n  type: SELECT_PHOTO,\n  payload\n});\n\nconst fetchPhotoPending = () => ({\n  type: FETCH_PHOTO_PENDING\n});\n\nconst fetchPhotoSuccess = data => ({\n  type: FETCH_PHOTO_SUCCESS,\n  payload: data\n});\n\nconst fetchPhotoFailure = error => ({\n  type: FETCH_PHOTO_FAILURE,\n  payload: error\n});\n\nexport const fetchPhoto = () => {\n  return (dispatch, getState) => {\n    dispatch(fetchPhotoPending());\n    flickrService.getRecentPhotos().then(data => {\n      dispatch(fetchPhotoSuccess(utilService.translateRecentPhotos(data.photos.photo)));\n    }).catch(error => {\n      dispatch(fetchPhotoFailure(error));\n    });\n  };\n};\n\nconst fetchFavPhotoPending = () => ({\n  type: FETCH_FAVPHOTO_PENDING\n});\n\nconst fetchFavPhotoSuccess = data => ({\n  type: FETCH_FAVPHOTO_SUCCESS,\n  payload: data\n});\n\nconst fetchFavPhotoFailure = error => ({\n  type: FETCH_FAVPHOTO_FAILURE,\n  payload: error\n});","map":{"version":3,"sources":["/home/rageoverkill/advanced/react/FlickrViewer/flickr-viewer/src/js/actions/index.js"],"names":["SELECT_PHOTO","FETCH_PHOTO_PENDING","FETCH_PHOTO_SUCCESS","FETCH_PHOTO_FAILURE","FETCH_FAVPHOTO_PENDING","FETCH_FAVPHOTO_SUCCESS","FETCH_FAVPHOTO_FAILURE","flickrService","utilService","selectPhoto","payload","type","fetchPhotoPending","fetchPhotoSuccess","data","fetchPhotoFailure","error","fetchPhoto","dispatch","getState","getRecentPhotos","then","translateRecentPhotos","photos","photo","catch","fetchFavPhotoPending","fetchFavPhotoSuccess","fetchFavPhotoFailure"],"mappings":"AAAA;AACA,SACEA,YADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,mBAJF,EAKEC,sBALF,EAMEC,sBANF,EAOEC,sBAPF,QAQO,2BARP;AASA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AAEA,OAAO,MAAMC,WAAW,GAAGC,OAAO,KAAK;AACrCC,EAAAA,IAAI,EAAEX,YAD+B;AAErCU,EAAAA;AAFqC,CAAL,CAA3B;;AAKP,MAAME,iBAAiB,GAAG,OAAO;AAC/BD,EAAAA,IAAI,EAAEV;AADyB,CAAP,CAA1B;;AAIA,MAAMY,iBAAiB,GAAGC,IAAI,KAAK;AACjCH,EAAAA,IAAI,EAAET,mBAD2B;AAEjCQ,EAAAA,OAAO,EAAEI;AAFwB,CAAL,CAA9B;;AAKA,MAAMC,iBAAiB,GAAGC,KAAK,KAAK;AAClCL,EAAAA,IAAI,EAAER,mBAD4B;AAElCO,EAAAA,OAAO,EAAEM;AAFyB,CAAL,CAA/B;;AAKA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7BD,IAAAA,QAAQ,CAACN,iBAAiB,EAAlB,CAAR;AACAL,IAAAA,aAAa,CACVa,eADH,GAEGC,IAFH,CAEQP,IAAI,IAAI;AACZI,MAAAA,QAAQ,CACNL,iBAAiB,CACfL,WAAW,CAACc,qBAAZ,CAAkCR,IAAI,CAACS,MAAL,CAAYC,KAA9C,CADe,CADX,CAAR;AAKD,KARH,EASGC,KATH,CASST,KAAK,IAAI;AACdE,MAAAA,QAAQ,CAACH,iBAAiB,CAACC,KAAD,CAAlB,CAAR;AACD,KAXH;AAYD,GAdD;AAeD,CAhBM;;AAkBP,MAAMU,oBAAoB,GAAG,OAAO;AAClCf,EAAAA,IAAI,EAAEP;AAD4B,CAAP,CAA7B;;AAIA,MAAMuB,oBAAoB,GAAGb,IAAI,KAAK;AACpCH,EAAAA,IAAI,EAAEN,sBAD8B;AAEpCK,EAAAA,OAAO,EAAEI;AAF2B,CAAL,CAAjC;;AAKA,MAAMc,oBAAoB,GAAGZ,KAAK,KAAK;AACrCL,EAAAA,IAAI,EAAEL,sBAD+B;AAErCI,EAAAA,OAAO,EAAEM;AAF4B,CAAL,CAAlC","sourcesContent":["// src/js/actions/index.js\nimport {\n  SELECT_PHOTO,\n  FETCH_PHOTO_PENDING,\n  FETCH_PHOTO_SUCCESS,\n  FETCH_PHOTO_FAILURE,\n  FETCH_FAVPHOTO_PENDING,\n  FETCH_FAVPHOTO_SUCCESS,\n  FETCH_FAVPHOTO_FAILURE\n} from \"../constants/action-types\";\nimport flickrService from \"../services/flickr-service.js\";\nimport utilService from \"../services/util-service.js\";\n\nexport const selectPhoto = payload => ({\n  type: SELECT_PHOTO,\n  payload\n});\n\nconst fetchPhotoPending = () => ({\n  type: FETCH_PHOTO_PENDING\n});\n\nconst fetchPhotoSuccess = data => ({\n  type: FETCH_PHOTO_SUCCESS,\n  payload: data\n});\n\nconst fetchPhotoFailure = error => ({\n  type: FETCH_PHOTO_FAILURE,\n  payload: error\n});\n\nexport const fetchPhoto = () => {\n  return (dispatch, getState) => {\n    dispatch(fetchPhotoPending());\n    flickrService\n      .getRecentPhotos()\n      .then(data => {\n        dispatch(\n          fetchPhotoSuccess(\n            utilService.translateRecentPhotos(data.photos.photo)\n          )\n        );\n      })\n      .catch(error => {\n        dispatch(fetchPhotoFailure(error));\n      });\n  };\n};\n\nconst fetchFavPhotoPending = () => ({\n  type: FETCH_FAVPHOTO_PENDING\n});\n\nconst fetchFavPhotoSuccess = data => ({\n  type: FETCH_FAVPHOTO_SUCCESS,\n  payload: data\n});\n\nconst fetchFavPhotoFailure = error => ({\n  type: FETCH_FAVPHOTO_FAILURE,\n  payload: error\n});\n"]},"metadata":{},"sourceType":"module"}